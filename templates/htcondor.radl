description htcondor (
    kind = 'main' and
    short = 'Install and configure a cluster HTCondor from distribution repositories.' and
    content = 'The template installs HTCondor from the package repositories. Initially the template creates as many working node hostnames as the sum of the values of feature "ec3_max_instances_max" in every system.

Webpage: http://research.cs.wisc.edu/htcondor'
)

network public (
    outbound = 'yes' and
    outports contains '9618/tcp'
)
network private ()

system front (
    net_interface.0.connection='private' and
    net_interface.0.dns_name = 'htcondoreserverprivate' and
    net_interface.1.connection='public' and
    net_interface.1.dns_name = 'htcondoreserver' and
    queue_system = 'condor' and
    # Install ansible roles needed
    disk.0.applications contains (name = 'ansible.modules.grycap.htcondor')
)

system wn (
    net_interface.0.connection='private'
)


configure wn (
@begin
---
  - roles:
    - { role: 'grycap.htcondor', htcondor_type_of_node: 'wn' }
@end
)

include htcondor_misc (
  template = 'openports im clues2'
)

configure front (
@begin
---
  - vars:
      SYSTEMS:
        ec3_jpath: /system/*
      NNODES: '{{ SYSTEMS | selectattr("ec3_max_instances_max", "defined") | sum(attribute="ec3_max_instances_max") }}'
      # Variables needed for CLUES
      AUTH:
        ec3_xpath: /system/front/auth


    roles:
    - { role: 'grycap.htcondor', htcondor_type_of_node: 'front',
                            htcondor_server_name: 'htcondoreserver',
                            max_number_of_nodes: '{{ NNODES }}' }
@end
)

deploy front 1
