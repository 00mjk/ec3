description docker (
    kind = 'component' and
    short = 'An open-source tool to deploy applications inside software containers.' and
    content = 'Docker automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux.

Webpage: https://www.docker.com/'
)

configure docker (
@begin
    - command: uname -r
      register: KERNEL_RELEASE

    - name: Apt install Docker dependencies in Deb system
      apt: name=wget update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"

    - name: Apt upgrade the kernel and install additional packages
      apt: name=linux-image-generic-lts-trusty update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian" and (KERNEL_RELEASE.stdout | version_compare('3.13.0', '<='))

    - name: restart the machine if kernel was upgraded
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true
      when: ansible_os_family == "Debian" and (KERNEL_RELEASE.stdout | version_compare('3.13.0', '<='))

    - name: waiting for machine to come back
      local_action: wait_for host={{IM_NODE_NET_0_IP}} state=started
      sudo: false
      when: ansible_os_family == "Debian" and (KERNEL_RELEASE.stdout | version_compare('3.13.0', '<='))

    - name: download docker code from repository
      shell: wget -qO- https://get.docker.com/ | sh creates=/etc/default/docker
      when: ansible_os_family == "Debian"

    - name: Yum install Docker in REL system (only works with centos7)
      yum: name=docker state=latest update_cache=yes
      when: ansible_os_family == "RedHat"

    - service: name=docker state=started
@end
)

system front ( ec3_templates contains 'docker' )

configure front (
@begin
  - tasks:
    - include: docker.yml
@end
)

configure wn (
@begin
  - ec3_prio: -10
    tasks:
    - include: docker.yml
@end
)
