
configure none (
@begin
    caca: caca
@end
)

configure front (
@begin
---
  - vars_files:
    - [ "{{ ansible_os_family }}.yml", "RedHat.yml", "none.yml" ]
    vars:
      RADL_SYSTEM_wn:
        ec3_xpath: /system/*
      RADL_CONF_wn:
        ec3_xpath: /configure/*
      AUTH:
        ec3_xpath: /system/front/auth
      EC3_CONTROL_CONTENT:
        ec3_file: ec3_control.py
      QUEUE_SYSTEM:
        ec3_xpath: /system/front/queue_system
      EC3_CONTROL_TORQUE_WRAPPER_CONTENT:
        ec3_file: ec3_torque.py
      EC3_CONTROL_SLURM_WRAPPER_CONTENT:
        ec3_file: ec3_slurm.py
    tasks:
    - shell: python -m argparse || yum -y install python-argparse
      when: ansible_os_family == "RedHat"
    - file: path=/usr/local/ec3 state=directory
    - copy:
         dest: /usr/local/ec3/ec3_control.py
         content: "{{EC3_CONTROL_CONTENT}}"
         mode: 0755
    - copy:
         dest: /usr/local/ec3/auth.dat
         content: "{{AUTH}}"
    - copy:
         dest: /usr/local/ec3/wn.radl
         content: |
            {{RADL_SYSTEM_wn}}
            {{RADL_CONF_wn}}
    - include: ec3_control_pbs.yml
      when: "{{ QUEUE_SYSTEM == 'torque' }}"
    - include: ec3_control_slurm.yml
      when: "{{ QUEUE_SYSTEM == 'slurm' }}"
    - shell: /usr/local/ec3/ec3_control
@end
)

configure ec3_control_pbs (
@begin
    - copy:
         dest: /usr/local/ec3/wrapper.py
         content: "{{EC3_CONTROL_TORQUE_WRAPPER_CONTENT}}"
         mode: 0755
    - copy:
         dest: /usr/local/ec3/ec3_control
         content: |
            #!/bin/bash
            
            cd /usr/local/ec3
            pgrep -f '^python ./ec3_control' || nohup ./ec3_control.py -a auth.dat -r wn.radl -w wrapper.py -l err -ll 0 -c service {{TORQUE_SERVICE}} start >& out &
         mode: 0755
@end
)

configure ec3_control_slurm (
@begin
    - copy:
         dest: /usr/local/ec3/wrapper.py
         content: "{{EC3_CONTROL_SLURM_WRAPPER_CONTENT}}"
         mode: 0755
    - copy:
         dest: /usr/local/ec3/ec3_control
         content: |
            #!/bin/bash
            
            cd /usr/local/ec3
            pgrep -f '^python ./ec3_control' || nohup ./ec3_control.py -a auth.dat -r wn.radl -w wrapper.py -l err -ll 0 >& out &
         mode: 0755
@end
)
