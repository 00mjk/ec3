tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/custom_types.yaml

metadata:
  kind: application
  short: Storm

description: Deploys an Apache Storm cluster with one Nimbus and between 1 and 100 Supervisors

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Maximum number of WNs in the elastic cluster
      default: 3
      required: yes

    fe_cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 1
      required: yes

    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 1 GB
      required: yes

    wn_cpus:
      type: integer
      description: Numer of CPUs for the WNs
      default: 1
      required: yes

    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 2 GB
      required: yes

  node_templates:

    fe_node:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Storm
      properties:
        dns_name: { get_property: [ fe, endpoint, dns_name ] }
        num_supervisors: { get_property: [ wn, scalable, count ] }
      requirements:
        - host: fe

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Storm
      properties:
        dns_name: { get_property: [ wn, endpoint, dns_name ] }
        front_end_ip: { get_attribute: [ fe, private_address, 0 ] }
      capabilities:
        wn:
          properties:
            max_instances: { get_input: wn_num }
            min_instances: { get_input: wn_num }
      requirements:
        - host: wn

    fe:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: nimbus
            network_name: PUBLIC
            ports:
              storm_port:
                protocol: tcp
                source: 8080
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 18.04

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: supervisor-#N#
            network_name: PRIVATE
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 18.04

  outputs:
    cluster_ip:
      value: { get_attribute: [ fe, public_address, 0 ] }
    storm_ui:
      value: {concat: [ 'http://', { get_attribute: [ fe, public_address, 0 ] }, ':8080' ] }
